exports[`<FormList /> renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#f0f1f4",
      "flex": 1,
      "flexDirection": "column",
      "justifyContent": "center",
      "padding": 0
    }
  }>
  <ScrollView
    dataSource={
      ListViewDataSource {
        "items": 1
      }
    }
    enableEmptySections={true}
    initialListSize={10}
    onContentSizeChange={[Function bound _onContentSizeChange]}
    onEndReachedThreshold={1000}
    onKeyboardDidHide={undefined}
    onKeyboardDidShow={undefined}
    onKeyboardWillHide={undefined}
    onKeyboardWillShow={undefined}
    onLayout={[Function bound _onLayout]}
    onScroll={[Function bound _onScroll]}
    pageSize={1}
    refreshControl={
      <function (props,context,updater){
      
      
      
      if(process.env.NODE_ENV!=='production'){
      process.env.NODE_ENV!=='production'?warning(this instanceof Constructor,'Something is calling a React component directly. Use a factory or '+'JSX instead. See: https://fb.me/react-legacyfactory'):void 0;
      }
      
      
      if(this.__reactAutoBindPairs.length){
      bindAutoBindMethods(this);
      }
      
      this.props=props;
      this.context=context;
      this.refs=emptyObject;
      this.updater=updater||ReactNoopUpdateQueue;
      
      this.state=null;
      
      
      
      
      var initialState=this.getInitialState?this.getInitialState():null;
      if(process.env.NODE_ENV!=='production'){
      
      if(initialState===undefined&&this.getInitialState._isMockFunction){
      
      
      initialState=null;
      }
      }
      !(typeof initialState==='object'&&!Array.isArray(initialState))?process.env.NODE_ENV!=='production'?invariant(false,'%s.getInitialState(): must return an object or null',Constructor.displayName||'ReactCompositeComponent'):_prodInvariant('82',Constructor.displayName||'ReactCompositeComponent'):void 0;
      
      this.state=initialState;
      }
        onRefresh={[Function bound onRefresh]}
        refreshing={false} />
    }
    removeClippedSubviews={true}
    renderRow={[Function bound renderRow]}
    renderSeparator={[Function renderSeparator]}
    scrollEventThrottle={50}
    scrollRenderAheadDistance={1000}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 1
      }
    }>
    <View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        onLayout={undefined}
        onResponderGrant={[Function bound touchableHandleResponderGrant]}
        onResponderMove={[Function bound touchableHandleResponderMove]}
        onResponderRelease={[Function bound touchableHandleResponderRelease]}
        onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
        onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
        onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
        style={
          Array [
            Object {
              "backgroundColor": "transparent"
            },
            undefined
          ]
        }
        testID={undefined}>
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "white",
              "flexDirection": "row",
              "padding": 10
            }
          }>
          <View
            style={
              Object {
                "flex": 1
              }
            }>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              numberOfLines={2}
              style={
                Object {
                  "color": "black",
                  "flex": 1,
                  "fontSize": 18,
                  "fontWeight": "500",
                  "marginBottom": 2
                }
              }>
              test form
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#dddddd",
          "height": 1,
          "marginLeft": 0
        }
      } />
  </ScrollView>
</View>
`;
